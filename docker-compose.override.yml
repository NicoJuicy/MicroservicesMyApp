version: '3.4'

services:

  catalogdb:
    container_name: catalogdb
    restart: always
    volumes:
        - ${WEBAPP_STORAGE_HOME}/site:/data/db
        #- ./data:/data/db
    ports:
        - "27017:27017"

  cartdb:
    container_name: cartdb
    restart: always
    ports:
       - "6379:6379"

  orderdb:
    container_name: orderdb
    ports:
       - "1433:1433"
    environment:
      SA_PASSWORD: "Titan#12"
      ACCEPT_EULA: "Y"

  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"


  catalog.api:
    container_name: catalogapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CatalogDbSettings:ConnectionString=mongodb://catalogdb:27017"
    depends_on:
      - catalogdb
    ports:
      - "8000:80"
    volumes:
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro

  cart.api:
    container_name: cartapi
    ports:
      - "8001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:Redis=cartdb:6379"
      - "EventBus:HostName=rabbitmq"
    depends_on:
      - cartdb
      - rabbitmq
    volumes:
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro

  ordering.api:
    container_name: orderingapi
    restart: on-failure
    environment:
       - ASPNETCORE_ENVIRONMENT=Development
       - "ConnectionStrings:OrderConnection=Server=orderdb;Database=OrderDb;User Id=sa;Password=Titan#12"
       - "EventBus:HostName=rabbitmq"
    depends_on:
       - orderdb
       - rabbitmq
    volumes:
       - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
       - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
    ports:
       - "8002:80"
  
